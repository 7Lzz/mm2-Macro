name: Build MM2 Macro Executables

permissions:
  contents: write

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        pip install PyQt5 keyboard mouse psutil pywin32 pyinstaller

    - name: Build Windows executable
      run: |
        pyinstaller --onefile --windowed --name "MM2-Macro-Windows" main.py

    - name: Upload Windows executable
      uses: actions/upload-artifact@v4
      with:
        name: MM2-Macro-Windows
        path: dist/MM2-Macro-Windows.exe

  build-macos:
    runs-on: macos-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        pip install PySide6 keyboard mouse psutil pyinstaller

    - name: Create PySide6 version of main.py
      run: |
        sed 's/from PyQt5/from PySide6/g; s/import PyQt5/import PySide6/g; s/pyqtSignal/Signal/g' main.py > main_pyside6.py

    - name: Build macOS app bundle
      run: |
        pyinstaller --onedir --windowed --osx-bundle-identifier "com.seven.mm2macro" --name "MM2-Macro-macOS" main_pyside6.py

    - name: Fix macOS bundle permissions
      run: |
        cd dist
        # Remove extended attributes and fix permissions
        sudo xattr -cr MM2-Macro-macOS.app
        sudo chmod -R 755 MM2-Macro-macOS.app
        sudo chmod +x MM2-Macro-macOS.app/Contents/MacOS/MM2-Macro-macOS
        
        # Create a simple self-signed certificate for basic signing
        security create-keychain -p temp123 temp.keychain
        security default-keychain -s temp.keychain
        security unlock-keychain -p temp123 temp.keychain
        security add-trusted-cert -d -r trustRoot -k temp.keychain /System/Library/Keychains/SystemRootCertificates.keychain
        
        # Create entitlements for keyboard access
        cat > entitlements.plist << 'EOF'
        <?xml version="1.0" encoding="UTF-8"?>
        <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
        <plist version="1.0">
        <dict>
            <key>com.apple.security.cs.allow-jit</key>
            <true/>
            <key>com.apple.security.cs.allow-unsigned-executable-memory</key>
            <true/>
            <key>com.apple.security.cs.disable-library-validation</key>
            <true/>
        </dict>
        </plist>
        EOF
        
        # Try to sign with ad-hoc signature
        codesign --force --deep --sign - --entitlements entitlements.plist MM2-Macro-macOS.app || echo "Signing failed, continuing anyway"

    - name: Create macOS distribution archive
      run: |
        cd dist
        zip -r MM2-Macro-macOS.zip MM2-Macro-macOS.app

    - name: Upload macOS executable
      uses: actions/upload-artifact@v4
      with:
        name: MM2-Macro-macOS
        path: dist/MM2-Macro-macOS.zip

  create-release:
    needs: [build-windows, build-macos]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    steps:
    - name: Download Windows artifact
      uses: actions/download-artifact@v4
      with:
        name: MM2-Macro-Windows
        path: ./windows/

    - name: Download macOS artifact
      uses: actions/download-artifact@v4
      with:
        name: MM2-Macro-macOS
        path: ./macos/

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ github.run_number }}
        name: MM2 Macro v${{ github.run_number }}
        body: |
          Automatic build from commit ${{ github.sha }}
          
          **Download:**
          - Windows: MM2-Macro-Windows.exe
          - macOS: MM2-Macro-macOS.zip (Extract and run the .app inside)
          
          **macOS Installation:**
          1. Download and extract MM2-Macro-macOS.zip
          2. Right-click MM2-Macro-macOS.app → Open (bypass security warning)
          3. Go to System Preferences → Security & Privacy → Privacy → Input Monitoring
          4. Click the lock, add MM2-Macro-macOS to the list
          5. Restart the app for keybinds to work
          
          **Note:** macOS version uses PySide6 for compatibility. Mouse functionality is limited on macOS.
        files: |
          ./windows/MM2-Macro-Windows.exe
          ./macos/MM2-Macro-macOS.zip
        draft: false
        prerelease: false